import java_cup.runtime.*;
import absyn.AST;

parser code {:

	private AST tree;

    public parser(Yylex s, AST t){
    	this(s);
    	this.tree = t;
   	}

:}

/* Terminales */

terminal AC, CC;
terminal PYC, POR, AL, CL, ASIG, AP, CP;
terminal String IF, ELSE;
terminal PRINT;
terminal String DO, WHILE;
terminal TO, STEP, DOWNTO;
terminal String FOR;
terminal MASMAS;
terminal MENOSMENOS;
terminal MAS, MENOS, NOT, DIV, MOD, UMINUS;
terminal MEQ, MAQ, MEOQ, MAOQ;
terminal EQ, NEQ;
terminal AND;
terminal OR;

terminal Integer NUMERO;
terminal Double NUMEROF;
terminal String IDENT;

/* No terminales */

non terminal listaSent;
non terminal sent;
non terminal elsePart;
non terminal java.lang.String exp;

/* Precedencia */

precedence left  MAS, MENOS;
precedence left  POR, DIV;
precedence left  UMINUS;
precedence left  AND, OR;
precedence left  ELSE;
precedence right NOT;

/* Gramatica */

listaSent	::=		sent
			|		listaSent sent
			;

sent		::=		exp:e PYC
			
			|		PRINT AP exp:e1 CP PYC

			|		AL listaSent CL

			;

exp			::=		exp:e1 MAS exp:e2
			
			|		exp:e1 MENOS exp:e2

			|		exp:e1 POR exp:e2

			|		exp:e1 DIV exp:e2	
			
			|		NUMERO:n
			
			;
